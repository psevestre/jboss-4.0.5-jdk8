// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package org.jboss.test.wsrp.core;

import java.io.Serializable;


public class MarkupParams implements Serializable
{
   /** The serialVersionUID */
   private static final long serialVersionUID = 3499920208888265115L;
   protected boolean secureClientCommunication;
   protected java.lang.String[] locales;
   protected java.lang.String[] mimeTypes;
   protected java.lang.String mode;
   protected java.lang.String windowState;
   protected ClientData clientData;
   protected java.lang.String navigationalState;
   protected java.lang.String[] markupCharacterSets;
   protected java.lang.String validateTag;
   protected java.lang.String[] validNewModes;
   protected java.lang.String[] validNewWindowStates;
   protected Extension[] extensions;

   public MarkupParams()
   {
   }

   public MarkupParams(boolean secureClientCommunication, java.lang.String[] locales, java.lang.String[] mimeTypes, java.lang.String mode, java.lang.String windowState, ClientData clientData, java.lang.String navigationalState, java.lang.String[] markupCharacterSets, java.lang.String validateTag, java.lang.String[] validNewModes, java.lang.String[] validNewWindowStates, Extension[] extensions)
   {
      this.secureClientCommunication = secureClientCommunication;
      this.locales = locales;
      this.mimeTypes = mimeTypes;
      this.mode = mode;
      this.windowState = windowState;
      this.clientData = clientData;
      this.navigationalState = navigationalState;
      this.markupCharacterSets = markupCharacterSets;
      this.validateTag = validateTag;
      this.validNewModes = validNewModes;
      this.validNewWindowStates = validNewWindowStates;
      this.extensions = extensions;
   }

   public boolean isSecureClientCommunication()
   {
      return secureClientCommunication;
   }

   public void setSecureClientCommunication(boolean secureClientCommunication)
   {
      this.secureClientCommunication = secureClientCommunication;
   }

   public java.lang.String[] getLocales()
   {
      return locales;
   }

   public void setLocales(java.lang.String[] locales)
   {
      this.locales = locales;
   }

   public java.lang.String[] getMimeTypes()
   {
      return mimeTypes;
   }

   public void setMimeTypes(java.lang.String[] mimeTypes)
   {
      this.mimeTypes = mimeTypes;
   }

   public java.lang.String getMode()
   {
      return mode;
   }

   public void setMode(java.lang.String mode)
   {
      this.mode = mode;
   }

   public java.lang.String getWindowState()
   {
      return windowState;
   }

   public void setWindowState(java.lang.String windowState)
   {
      this.windowState = windowState;
   }

   public ClientData getClientData()
   {
      return clientData;
   }

   public void setClientData(ClientData clientData)
   {
      this.clientData = clientData;
   }

   public java.lang.String getNavigationalState()
   {
      return navigationalState;
   }

   public void setNavigationalState(java.lang.String navigationalState)
   {
      this.navigationalState = navigationalState;
   }

   public java.lang.String[] getMarkupCharacterSets()
   {
      return markupCharacterSets;
   }

   public void setMarkupCharacterSets(java.lang.String[] markupCharacterSets)
   {
      this.markupCharacterSets = markupCharacterSets;
   }

   public java.lang.String getValidateTag()
   {
      return validateTag;
   }

   public void setValidateTag(java.lang.String validateTag)
   {
      this.validateTag = validateTag;
   }

   public java.lang.String[] getValidNewModes()
   {
      return validNewModes;
   }

   public void setValidNewModes(java.lang.String[] validNewModes)
   {
      this.validNewModes = validNewModes;
   }

   public java.lang.String[] getValidNewWindowStates()
   {
      return validNewWindowStates;
   }

   public void setValidNewWindowStates(java.lang.String[] validNewWindowStates)
   {
      this.validNewWindowStates = validNewWindowStates;
   }

   public Extension[] getExtensions()
   {
      return extensions;
   }

   public void setExtensions(Extension[] extensions)
   {
      this.extensions = extensions;
   }
}
