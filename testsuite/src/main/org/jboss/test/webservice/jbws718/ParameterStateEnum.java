// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package org.jboss.test.webservice.jbws718;


import java.util.Map;
import java.util.HashMap;

public class ParameterStateEnum {
    private java.lang.String value;
    private static java.util.Map valueMap = new HashMap();
    public static final java.lang.String _HasValidValueString = "HasValidValue";
    public static final java.lang.String _MissingValidValueString = "MissingValidValue";
    public static final java.lang.String _HasOutstandingDependenciesString = "HasOutstandingDependencies";
    public static final java.lang.String _DynamicValuesUnavailableString = "DynamicValuesUnavailable";
    
    public static final java.lang.String _HasValidValue = new java.lang.String(_HasValidValueString);
    public static final java.lang.String _MissingValidValue = new java.lang.String(_MissingValidValueString);
    public static final java.lang.String _HasOutstandingDependencies = new java.lang.String(_HasOutstandingDependenciesString);
    public static final java.lang.String _DynamicValuesUnavailable = new java.lang.String(_DynamicValuesUnavailableString);
    
    public static final ParameterStateEnum HasValidValue = new ParameterStateEnum(_HasValidValue);
    public static final ParameterStateEnum MissingValidValue = new ParameterStateEnum(_MissingValidValue);
    public static final ParameterStateEnum HasOutstandingDependencies = new ParameterStateEnum(_HasOutstandingDependencies);
    public static final ParameterStateEnum DynamicValuesUnavailable = new ParameterStateEnum(_DynamicValuesUnavailable);
    
    protected ParameterStateEnum(java.lang.String value) {
        this.value = value;
        valueMap.put(this.toString(), this);
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static ParameterStateEnum fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (HasValidValue.value.equals(value)) {
            return HasValidValue;
        } else if (MissingValidValue.value.equals(value)) {
            return MissingValidValue;
        } else if (HasOutstandingDependencies.value.equals(value)) {
            return HasOutstandingDependencies;
        } else if (DynamicValuesUnavailable.value.equals(value)) {
            return DynamicValuesUnavailable;
        }
        throw new java.lang.IllegalArgumentException();
    }
    
    public static ParameterStateEnum fromString(java.lang.String value)
        throws java.lang.IllegalStateException {
        ParameterStateEnum ret = (ParameterStateEnum)valueMap.get(value);
        if (ret != null) {
            return ret;
        }
        if (value.equals(_HasValidValueString)) {
            return HasValidValue;
        } else if (value.equals(_MissingValidValueString)) {
            return MissingValidValue;
        } else if (value.equals(_HasOutstandingDependenciesString)) {
            return HasOutstandingDependencies;
        } else if (value.equals(_DynamicValuesUnavailableString)) {
            return DynamicValuesUnavailable;
        }
        throw new IllegalArgumentException();
    }
    
    public java.lang.String toString() {
        return value.toString();
    }
    
    private java.lang.Object readResolve()
        throws java.io.ObjectStreamException {
        return fromValue(getValue());
    }
    
    public boolean equals(java.lang.Object obj) {
        if (!(obj instanceof ParameterStateEnum)) {
            return false;
        }
        return ((ParameterStateEnum)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
