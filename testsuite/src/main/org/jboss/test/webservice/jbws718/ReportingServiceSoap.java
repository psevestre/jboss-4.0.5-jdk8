// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package org.jboss.test.webservice.jbws718;

import java.rmi.Remote;
import java.rmi.RemoteException;

public interface ReportingServiceSoap extends Remote
{
   public ArrayOfString listSecureMethods() throws RemoteException;

   public String createBatch() throws RemoteException;

   public CancelBatchResponse cancelBatch() throws RemoteException;

   public ExecuteBatchResponse executeBatch() throws RemoteException;

   public ArrayOfProperty getSystemProperties(ArrayOfProperty properties) throws RemoteException;

   public SetSystemPropertiesResponse setSystemProperties(ArrayOfProperty properties) throws RemoteException;

   public DeleteItemResponse deleteItem(String item) throws RemoteException;

   public MoveItemResponse moveItem(String item, String target) throws RemoteException;

   public ArrayOfCatalogItem listChildren(String item, boolean recursive) throws RemoteException;

   public ArrayOfProperty getProperties(String item, ArrayOfProperty properties) throws RemoteException;

   public SetPropertiesResponse setProperties(String item, ArrayOfProperty properties) throws RemoteException;

   public ItemTypeEnum getItemType(String item) throws RemoteException;

   public CreateFolderResponse createFolder(String folder, String parent, ArrayOfProperty properties) throws RemoteException;

   public ArrayOfWarning createReport(String report, String parent, boolean overwrite, byte[] definition, ArrayOfProperty properties) throws RemoteException;

   public byte[] getReportDefinition(String report) throws RemoteException;

   public ArrayOfWarning setReportDefinition(String report, byte[] definition) throws RemoteException;

   public CreateResourceResponse createResource(String resource, String parent, boolean overwrite, byte[] contents, String mimeType, ArrayOfProperty properties)
         throws RemoteException;

   public SetResourceContentsResponse setResourceContents(String resource, byte[] contents, String mimeType) throws RemoteException;

   public GetResourceContentsResponse getResourceContents(String resource) throws RemoteException;

   public ArrayOfReportParameter getReportParameters(String report, String historyID, boolean forRendering, ArrayOfParameterValue values,
         ArrayOfDataSourceCredentials credentials) throws RemoteException;

   public SetReportParametersResponse setReportParameters(String report, ArrayOfReportParameter parameters) throws RemoteException;

   public CreateLinkedReportResponse createLinkedReport(String report, String parent, String link, ArrayOfProperty properties) throws RemoteException;

   public String getReportLink(String report) throws RemoteException;

   public SetReportLinkResponse setReportLink(String report, String link) throws RemoteException;

   public ArrayOfCatalogItem listLinkedReports(String report) throws RemoteException;

   public RenderResponse render(String report, String format, String historyID, String deviceInfo, ArrayOfParameterValue parameters,
         ArrayOfDataSourceCredentials credentials, String showHideToggle) throws RemoteException;

   public RenderStreamResponse renderStream(String report, String format, String streamID, String historyID, String deviceInfo, ArrayOfParameterValue parameters)
         throws RemoteException;

   public GetRenderResourceResponse getRenderResource(String format, String deviceInfo) throws RemoteException;

   public SetExecutionOptionsResponse setExecutionOptions(javax.xml.soap.SOAPElement parameters) throws RemoteException;

   public javax.xml.soap.SOAPElement getExecutionOptions(String report) throws RemoteException;

   public SetCacheOptionsResponse setCacheOptions(javax.xml.soap.SOAPElement parameters) throws RemoteException;

   public javax.xml.soap.SOAPElement getCacheOptions(String report) throws RemoteException;

   public UpdateReportExecutionSnapshotResponse updateReportExecutionSnapshot(String report) throws RemoteException;

   public FlushCacheResponse flushCache(String report) throws RemoteException;

   public ArrayOfJob listJobs() throws RemoteException;

   public boolean cancelJob(String jobID) throws RemoteException;

   public CreateDataSourceResponse createDataSource(String dataSource, String parent, boolean overwrite, DataSourceDefinition definition, ArrayOfProperty properties)
         throws RemoteException;

   public DataSourceDefinition getDataSourceContents(String dataSource) throws RemoteException;

   public SetDataSourceContentsResponse setDataSourceContents(String dataSource, DataSourceDefinition definition) throws RemoteException;

   public EnableDataSourceResponse enableDataSource(String dataSource) throws RemoteException;

   public DisableDataSourceResponse disableDataSource(String dataSource) throws RemoteException;

   public ArrayOfCatalogItem listReportsUsingDataSource(String dataSource) throws RemoteException;

   public SetReportDataSourcesResponse setReportDataSources(String report, ArrayOfDataSource dataSources) throws RemoteException;

   public ArrayOfDataSource getReportDataSources(String report) throws RemoteException;

   public ArrayOfDataSourcePrompt getReportDataSourcePrompts(String report) throws RemoteException;

   public CreateReportHistorySnapshotResponse createReportHistorySnapshot(String report) throws RemoteException;

   public SetReportHistoryOptionsResponse setReportHistoryOptions(javax.xml.soap.SOAPElement parameters) throws RemoteException;

   public javax.xml.soap.SOAPElement getReportHistoryOptions(String report) throws RemoteException;

   public SetReportHistoryLimitResponse setReportHistoryLimit(String report, boolean useSystem, int historyLimit) throws RemoteException;

   public GetReportHistoryLimitResponse getReportHistoryLimit(String report) throws RemoteException;

   public ArrayOfReportHistorySnapshot listReportHistory(String report) throws RemoteException;

   public DeleteReportHistorySnapshotResponse deleteReportHistorySnapshot(String report, String historyID) throws RemoteException;

   public ArrayOfCatalogItem findItems(String folder, BooleanOperatorEnum booleanOperator, ArrayOfSearchCondition conditions) throws RemoteException;

   public String createSchedule(String name, javax.xml.soap.SOAPElement scheduleDefinition) throws RemoteException;

   public DeleteScheduleResponse deleteSchedule(String scheduleID) throws RemoteException;

   public SetSchedulePropertiesResponse setScheduleProperties(String name, String scheduleID, javax.xml.soap.SOAPElement scheduleDefinition) throws RemoteException;

   public Schedule getScheduleProperties(String scheduleID) throws RemoteException;

   public ArrayOfCatalogItem listScheduledReports(String scheduleID) throws RemoteException;

   public ArrayOfSchedule listSchedules() throws RemoteException;

   public PauseScheduleResponse pauseSchedule(String scheduleID) throws RemoteException;

   public ResumeScheduleResponse resumeSchedule(String scheduleID) throws RemoteException;

   public String createSubscription(String report, ExtensionSettings extensionSettings, String description, String eventType, String matchData,
         ArrayOfParameterValue parameters) throws RemoteException;

   public String createDataDrivenSubscription(String report, ExtensionSettings extensionSettings, javax.xml.soap.SOAPElement dataRetrievalPlan, String description,
         String eventType, String matchData, ArrayOfParameterValueOrFieldReference parameters) throws RemoteException;

   public SetSubscriptionPropertiesResponse setSubscriptionProperties(String subscriptionID, ExtensionSettings extensionSettings, String description, String eventType,
         String matchData, ArrayOfParameterValue parameters) throws RemoteException;

   public SetDataDrivenSubscriptionPropertiesResponse setDataDrivenSubscriptionProperties(String dataDrivenSubscriptionID, ExtensionSettings extensionSettings,
         javax.xml.soap.SOAPElement dataRetrievalPlan, String description, String eventType, String matchData, ArrayOfParameterValueOrFieldReference parameters)
         throws RemoteException;

   public GetSubscriptionPropertiesResponse getSubscriptionProperties(String subscriptionID) throws RemoteException;

   public GetDataDrivenSubscriptionPropertiesResponse getDataDrivenSubscriptionProperties(String dataDrivenSubscriptionID) throws RemoteException;

   public DeleteSubscriptionResponse deleteSubscription(String subscriptionID) throws RemoteException;

   public PrepareQueryResponse prepareQuery(javax.xml.soap.SOAPElement dataSource, DataSetDefinition dataSet) throws RemoteException;

   public ArrayOfExtensionParameter getExtensionSettings(String extension) throws RemoteException;

   public ArrayOfExtensionParameter validateExtensionSettings(String extension, ArrayOfParameterValueOrFieldReference parameterValues) throws RemoteException;

   public ArrayOfSubscription listSubscriptions(String report, String owner) throws RemoteException;

   public ArrayOfSubscription listSubscriptionsUsingDataSource(String dataSource) throws RemoteException;

   public ArrayOfExtension listExtensions(ExtensionTypeEnum extensionType) throws RemoteException;

   public ArrayOfEvent listEvents() throws RemoteException;

   public FireEventResponse fireEvent(String eventType, String eventData) throws RemoteException;

   public ArrayOfTask listSystemTasks() throws RemoteException;

   public ArrayOfTask listTasks() throws RemoteException;

   public ArrayOfRole listSystemRoles() throws RemoteException;

   public ArrayOfRole listRoles() throws RemoteException;

   public CreateRoleResponse createRole(String name, String description, ArrayOfTask tasks) throws RemoteException;

   public DeleteRoleResponse deleteRole(String name) throws RemoteException;

   public GetRolePropertiesResponse getRoleProperties(String name) throws RemoteException;

   public SetRolePropertiesResponse setRoleProperties(String name, String description, ArrayOfTask tasks) throws RemoteException;

   public ArrayOfPolicy getSystemPolicies() throws RemoteException;

   public SetSystemPoliciesResponse setSystemPolicies(ArrayOfPolicy policies) throws RemoteException;

   public GetPoliciesResponse getPolicies(String item) throws RemoteException;

   public SetPoliciesResponse setPolicies(String item, ArrayOfPolicy policies) throws RemoteException;

   public InheritParentSecurityResponse inheritParentSecurity(String item) throws RemoteException;

   public ArrayOfString3 getSystemPermissions() throws RemoteException;

   public ArrayOfString3 getPermissions(String item) throws RemoteException;

   public LogonUserResponse logonUser(String userName, String password, String authority) throws RemoteException;

   public LogoffResponse logoff() throws RemoteException;
}
